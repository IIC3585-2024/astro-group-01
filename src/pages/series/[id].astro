---
import Layout from "../../layouts/layout.astro";
import SeriesComments from "../../components/SeriesComments.svelte";

const id = Number(Astro.params.id);
let seriesInfo: any;

try {
    const response = await fetch(`${Astro.url.origin}/api/series/${id}`);
    if (!response.ok) throw new Error(response.statusText);
    seriesInfo = await response.json();
} catch (error) {
    console.error('Error fetching series:', error);
    Astro.redirect('/');
}
---

<style>
    section {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        margin-top: 2rem;
        margin-bottom: 5rem;
    }

    img{
        border-radius: 10px;
        height: 450px;
        width: 300px;
        box-shadow: 0px 0px 10px hsl(224, 100%, 85%);
        margin: auto;
    }

    h1 {
        font-size: 2rem;
        margin-bottom: 1rem;
    }

    p {
        font-size: 1.5rem;
        margin-bottom: 1rem;
    }

    .container{
        display: flex;
        gap: 50px;
    }

    @media (max-width: 720px) {
        .container{
            flex-direction: column;
        }

        .serie-info{
            text-align: center;
        }
    }

    .episode-count{
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .episode-count p{
        margin: 0;
        color: #C1C3C8;
    }

    .category{
        margin-top: 0;
        background-color: #ffffff4e;
        padding: 5px 10px;
        border-radius: 5px;
    }

    
</style>

<Layout title={`${seriesInfo.name} - AstroFilms`}>
    <section>
        <h1>{seriesInfo.name}</h1>

        <div class="container">
            <img src={seriesInfo.poster || "/unavailable.png"} alt={seriesInfo.name} />

            <div class="serie-info">
                <p>{seriesInfo.description}</p>
                <p>Streaming service: <span class="category">{seriesInfo.streamingService}</span></p>
                <p>Episodes per season:</p>

                <div class="episode-count">
                    {seriesInfo.episodesPerSeason.map((episodes: number, index: number) => (
                        <p>Season {index + 1}: {episodes}</p>
                    ))}
                </div>

                <p>Category: <span class="category">{seriesInfo.category}</span></p>
            </div>
        </div>
        
        
        <SeriesComments
            client:only="svelte"
            astroOrigin={Astro.url.origin}
            currentUser={Astro.locals.user}
            seriesId={id}
            ratings={seriesInfo.ratings}
            comments={seriesInfo.comments}
        />
    </section>
</Layout>
